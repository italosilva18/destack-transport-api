#!/bin/bash

# Script de Instala√ß√£o Completa para Destack Transport API
# Tenta configurar para Docker ou, como alternativa, para execu√ß√£o local.

set -e # Sai imediatamente se um comando falhar

echo "==========================================="
echo " Destack Transport API - Instala√ß√£o Completa "
echo "==========================================="
echo ""

# --- Fun√ß√µes Auxiliares ---
check_command() {
    command -v "$1" &> /dev/null
}

# --- Verifica√ß√£o de Depend√™ncias Essenciais ---
echo "üîé Verificando depend√™ncias..."

if ! check_command go; then
    echo "‚ùå Go n√£o est√° instalado. Por favor, instale Go 1.23+ primeiro."
    echo "   Visite: https://golang.org/dl/"
    exit 1
fi
GO_VERSION=$(go version | awk '{print $3}' | sed 's/go//')
echo "‚úÖ Go instalado: vers√£o $GO_VERSION"

DOCKER_AVAILABLE=false
if check_command docker && check_command docker-compose; then
    echo "‚úÖ Docker e Docker Compose encontrados."
    DOCKER_AVAILABLE=true
else
    echo "‚ö†Ô∏è Docker ou Docker Compose n√£o encontrado. A instala√ß√£o via Docker n√£o ser√° poss√≠vel."
    echo "   Para Docker: Instale Docker Desktop (https://www.docker.com/products/docker-desktop)"
fi

echo ""

# --- Configura√ß√£o de Diret√≥rios e Arquivos Iniciais ---
echo "üìÅ Configurando diret√≥rios Docker..."
if [ -f ./setup-docker-dirs.sh ]; then
    ./setup-docker-dirs.sh #
else
    echo "‚ö†Ô∏è Script setup-docker-dirs.sh n√£o encontrado. Pulando esta etapa."
fi
echo ""

echo "üîß Configurando arquivo de ambiente .env..."
if [ ! -f .env ]; then
    if [ -f .env.docker ]; then
        echo "üìù Copiando .env.docker para .env..."
        cp .env.docker .env
        echo "‚úÖ .env criado a partir de .env.docker. Ajuste DB_HOST se for rodar localmente."
    elif [ -f .env.example ]; then
        echo "üìù Copiando .env.example para .env..."
        cp .env.example .env
        echo "‚úÖ .env criado a partir de .env.example. Por favor, edite-o com suas configura√ß√µes."
    else
        echo "‚ùå Nenhum arquivo .env.docker ou .env.example encontrado. Crie o .env manualmente."
        exit 1
    fi
else
    echo "‚ÑπÔ∏è Arquivo .env j√° existe. Verifique suas configura√ß√µes."
fi
echo ""

# --- Instala√ß√£o das Depend√™ncias Go ---
echo "üì¶ Instalando depend√™ncias do Go..."
go mod download #
go mod verify #
echo "‚úÖ Depend√™ncias do Go instaladas."
echo ""

# --- Tentativa de Instala√ß√£o com Docker (se dispon√≠vel e desejado) ---
if [ "$DOCKER_AVAILABLE" = true ]; then
    read -p "üöÄ Deseja tentar a instala√ß√£o e execu√ß√£o com Docker agora? (y/N): " -n 1 -r
    echo ""
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo "üê≥ Iniciando com Docker Compose..."
        if [ ! -f Dockerfile ]; then
            echo "‚ùå ERRO: Dockerfile n√£o encontrado! N√£o √© poss√≠vel construir a imagem da API."
            echo "   Por favor, adicione o Dockerfile ao projeto e tente novamente."
        else
            echo "   (Isso pode levar alguns minutos na primeira vez, pois construir√° a imagem)"
            if docker-compose up -d --build; then
                echo "‚úÖ Servi√ßos Docker iniciados com sucesso!"
                echo "   API deve estar acess√≠vel em http://localhost:8080 (verifique a porta no .env)"
                echo "   Para ver os logs: docker-compose logs -f api"
                echo "üéâ Instala√ß√£o Docker conclu√≠da!"
                exit 0
            else
                echo "‚ùå Falha ao iniciar servi√ßos Docker. Verifique os logs acima."
                echo "   Voc√™ pode tentar rodar localmente ou corrigir os problemas do Docker."
            fi
        fi
    else
        echo "‚ÑπÔ∏è Instala√ß√£o com Docker pulada."
    fi
fi
echo ""

# --- Tentativa de Instala√ß√£o Local (se Docker falhou ou n√£o foi escolhido) ---
echo "üõ†Ô∏è Prosseguindo com a tentativa de configura√ß√£o para execu√ß√£o local..."

echo "üî® Compilando aplica√ß√£o Go..."
if go build -o tmp/destack-api ./cmd/server; then #
    echo "‚úÖ Aplica√ß√£o compilada com sucesso (./tmp/destack-api)."
else
    echo "‚ùå Falha na compila√ß√£o da aplica√ß√£o Go. Verifique os erros."
    exit 1
fi
echo ""

echo "üóÑÔ∏è Configura√ß√£o do banco de dados PostgreSQL local..."
if ! check_command psql; then
    echo "‚ö†Ô∏è psql (PostgreSQL client) n√£o encontrado. N√£o ser√° poss√≠vel inicializar o banco de dados local automaticamente."
    echo "   Por favor, instale o PostgreSQL e certifique-se que 'psql' est√° no PATH."
    echo "   Voc√™ precisar√° criar o banco de dados e o usu√°rio manualmente conforme o .env e o script 'scripts/init-db.sql'."
else
    echo "‚úÖ psql encontrado."
    read -p "Deseja tentar inicializar o banco de dados local agora (requer psql e acesso)? (y/N): " -n 1 -r
    echo ""
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        if [ -f scripts/init-db.sql ]; then
            echo "   Por favor, insira a senha do usu√°rio superusu√°rio do PostgreSQL (ex: 'postgres') se solicitado."
            # Voc√™ pode precisar ajustar -U <seu_usuario_postgres>
            if PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -U $DB_USER -d $DB_NAME -f scripts/init-db.sql &>/dev/null || psql -U postgres -f scripts/init-db.sql ; then
                 echo "‚úÖ Script de inicializa√ß√£o do banco de dados local executado (ou tentado)."
                 echo "   Verifique se n√£o houve erros e se o banco 'destack_transport' e as extens√µes foram criados."
            else
                 echo "‚ùå Falha ao executar o script de inicializa√ß√£o do banco. Verifique os erros e as configura√ß√µes no .env."
                 echo "   Comando tentado: psql -U postgres -f scripts/init-db.sql"
            fi
        else
            echo "‚ùå Script scripts/init-db.sql n√£o encontrado."
        fi
    else
        echo "‚ÑπÔ∏è Inicializa√ß√£o do banco de dados local pulada. Configure-o manualmente."
    fi
fi
echo ""

echo "üéâ Configura√ß√£o para execu√ß√£o local conclu√≠da (ou tentada)!"
echo "   Lembre-se de:"
echo "   1. Garantir que o PostgreSQL esteja rodando e acess√≠vel."
echo "   2. Que o banco de dados 'destack_transport' exista e o usu√°rio no .env tenha permiss√µes."
echo "   3. Ajustar o arquivo .env (DB_HOST, DB_USER, DB_PASSWORD, DB_NAME) para seu ambiente local."
echo ""
echo "üöÄ Para rodar a aplica√ß√£o localmente (ap√≥s configurar o BD):"
echo "   ./tmp/destack-api"
echo "   Ou use: make run"
echo ""
echo "‚ú® Fim do script de instala√ß√£o completa."